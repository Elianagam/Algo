Object subclass: #AlgoBay	instanceVariableNames: 'cantidadProductos listaProductos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!AlgoBay methodsFor: 'as yet unclassified' stamp: 'elianagam 9/19/2017 21:36'!getProducto: unNombreProducto	| producto |	listaProductos do: [ :p | 		((p obtenerNombre) = unNombreProducto) ifTrue: [			producto := p. ].			].	^producto! !!AlgoBay methodsFor: 'as yet unclassified' stamp: 'elianagam 9/19/2017 23:17'!crearCuponConPorcentaje: unPorcentaje	^Cupon conPorcentaje: unPorcentaje.		! !!AlgoBay methodsFor: 'as yet unclassified' stamp: 'elianagam 9/6/2017 09:40'!cantidadDeProductos	^cantidadProductos! !!AlgoBay methodsFor: 'as yet unclassified' stamp: 'elianagam 11/11/2011 01:07'!getPrecioTotalDe: unaCompra	^unaCompra obtenerCostoTotal	! !!AlgoBay methodsFor: 'as yet unclassified' stamp: 'elianagam 11/11/2011 01:10'!agregar: unProducto enCompra: unaCompra	unaCompra agregarProducto: unProducto.		! !!AlgoBay methodsFor: 'as yet unclassified' stamp: 'elianagam 9/7/2017 04:48'!agregarCupon: unCupon enCompra: unaCompra	unaCompra agregarCupon: unCupon.! !!AlgoBay methodsFor: 'as yet unclassified' stamp: 'elianagam 9/6/2017 22:03'!crearNuevaCompra 	^Compra new! !!AlgoBay methodsFor: 'as yet unclassified' stamp: 'elianagam 11/11/2011 01:08'!crearNuevaCompraConEnvioYGarantia	^(Compra conEnvio) conGarantia! !!AlgoBay methodsFor: 'as yet unclassified' stamp: 'elianagam 9/19/2017 21:36'!agregarProducto: unProducto conPrecio: unPrecio	| producto |	producto := Producto crearProducto: unProducto conPrecio: unPrecio.		listaProductos add: producto.	cantidadProductos := cantidadProductos + 1.	^producto! !!AlgoBay methodsFor: 'as yet unclassified' stamp: 'elianagam 11/11/2011 00:57'!crearNuevaCompraConGarantia	^Compra conGarantia! !!AlgoBay methodsFor: 'as yet unclassified' stamp: 'elianagam 11/11/2011 00:57'!crearNuevaCompraConEnvio	^Compra conEnvio.! !!AlgoBay methodsFor: 'initialization' stamp: 'elianagam 9/6/2017 15:27'!initialize	cantidadProductos := 0.	listaProductos := OrderedCollection new.! !Object subclass: #Compra	instanceVariableNames: 'compras cupones costosAdicionales bonificacion'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Compra methodsFor: 'initialization' stamp: 'elianagam 9/19/2017 22:13'!initialize	compras := OrderedCollection new.	costosAdicionales := OrderedCollection new.	cupones := OrderedCollection new.	bonificacion := 0.! !!Compra methodsFor: 'as yet unclassified' stamp: 'elianagam 11/11/2011 20:29'!agregarCupon: unCupon	cupones add: unCupon.	! !!Compra methodsFor: 'as yet unclassified' stamp: 'elianagam 9/19/2017 21:40'!obtenerCuponMayorValor	| valorCupon |	valorCupon := 0.	cupones do: [ :c | 		(c valor > valorCupon) ifTrue: [ 			valorCupon := c valor] ].	^valorCupon	! !!Compra methodsFor: 'as yet unclassified' stamp: 'elianagam 9/20/2017 11:27'!obternerCostosAdicionales	| adicional |	adicional := 0.	costosAdicionales do: [ :c |		adicional  := (c valor) + adicional. ].	^adicional! !!Compra methodsFor: 'as yet unclassified' stamp: 'elianagam 9/19/2017 23:23'!obtenerCostoTotal	| total |	total := self obtenerCostoDeProductos + self obternerCostosAdicionales.	(total >= 5000) ifTrue: [ 			total := total - bonificacion. ]. 		total := total - (total * (self obtenerCuponMayorValor)).		(compras isEmpty and: total > 0) ifTrue: [ 		[ CompraVaciaError signal ] on: CompraVaciaError do: [			total := 0 ]		].	^total! !!Compra methodsFor: 'as yet unclassified' stamp: 'elianagam 9/20/2017 11:27'!conEnvio	| envio |	envio := Envio new.	bonificacion := envio valor.	costosAdicionales add: envio.! !!Compra methodsFor: 'as yet unclassified' stamp: 'elianagam 9/19/2017 21:54'!conGarantia	| garantia |	garantia := Garantia deCompra: self.	costosAdicionales add: garantia.! !!Compra methodsFor: 'as yet unclassified' stamp: 'elianagam 11/11/2011 20:33'!obtenerCostoDeProductos	| costo |	costo := 0.	compras do: [ :p |		costo  := (p obtenerPrecio) + costo.  ].	^costo! !!Compra methodsFor: 'as yet unclassified' stamp: 'elianagam 9/6/2017 19:03'!agregarProducto: unProducto	compras add: unProducto.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Compra class	instanceVariableNames: ''!!Compra class methodsFor: 'as yet unclassified' stamp: 'elianagam 11/11/2011 00:57'!conGarantia	| compra |	compra := self new.	compra conGarantia.	^compra! !!Compra class methodsFor: 'as yet unclassified' stamp: 'elianagam 11/11/2011 01:05'!conEnvio	| compra |	compra := self new.	compra conEnvio.	^compra! !Error subclass: #CompraVaciaError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Object subclass: #Cupon	instanceVariableNames: 'valor'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Cupon methodsFor: 'as yet unclassified' stamp: 'elianagam 11/11/2011 19:02'!conPorcentaje: unPorcentaje	(unPorcentaje <= 0) ifTrue: [ ValorNegativoError signal ]. 	valor := unPorcentaje.! !!Cupon methodsFor: 'accessing' stamp: 'elianagam 11/11/2011 01:03'!valor	^valor/100! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cupon class	instanceVariableNames: ''!!Cupon class methodsFor: 'as yet unclassified' stamp: 'elianagam 11/11/2011 13:16'!conPorcentaje: unProcentaje	| cupon |	cupon := self new.	cupon conPorcentaje: unProcentaje.	^cupon! !Object subclass: #Envio	instanceVariableNames: 'valor'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Envio methodsFor: 'initialization' stamp: 'elianagam 9/19/2017 21:44'!initialize	valor := 100.! !!Envio methodsFor: 'accessing' stamp: 'elianagam 11/11/2011 00:05'!valor	^valor! !Object subclass: #Garantia	instanceVariableNames: 'valor compra'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Garantia methodsFor: 'accessing' stamp: 'elianagam 9/19/2017 22:01'!valor	^compra obtenerCostoDeProductos * (10/100)! !!Garantia methodsFor: 'as yet unclassified' stamp: 'elianagam 9/19/2017 22:00'!deCompra: unaCompra	compra := unaCompra.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Garantia class	instanceVariableNames: ''!!Garantia class methodsFor: 'as yet unclassified' stamp: 'elianagam 9/19/2017 21:47'!deCompra: unaCompra	| garantia |	garantia := self new.	garantia deCompra: unaCompra.	^garantia! !Object subclass: #Producto	instanceVariableNames: 'precio nombre'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Producto methodsFor: 'initialization' stamp: 'elianagam 9/6/2017 12:28'!initialize	precio := 0.! !!Producto methodsFor: 'as yet unclassified' stamp: 'elianagam 9/6/2017 12:44'!obtenerNombre	^nombre ! !!Producto methodsFor: 'as yet unclassified' stamp: 'elianagam 11/11/2011 19:02'!crearProducto: unProducto conPrecio: unPrecio	(unPrecio <= 0) ifTrue: [ ValorNegativoError signal ].	precio := unPrecio.	nombre:= unProducto.	! !!Producto methodsFor: 'accessing' stamp: 'elianagam 9/6/2017 15:26'!obtenerPrecio	^precio! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Producto class	instanceVariableNames: 'precio nombre'!!Producto class methodsFor: 'as yet unclassified' stamp: 'elianagam 11/11/2011 18:29'!crearProducto: unProducto conPrecio: unPrecio	| producto |	producto := self new.	producto crearProducto: unProducto conPrecio: unPrecio.	^producto! !Error subclass: #ValorNegativoError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!